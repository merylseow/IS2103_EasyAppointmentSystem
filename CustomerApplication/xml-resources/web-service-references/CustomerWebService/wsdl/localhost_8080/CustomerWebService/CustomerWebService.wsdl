<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is Metro/2.4.3 (RELEASE-2.4.3-ad3323c; 2019-01-21T17:46:06+0000) JAXWS-RI/2.3.2 JAXWS-API/2.3.2 JAXB-RI/2.3.2 JAXB-API/2.3.2 git-revision#unknown. --><!-- Generated by JAX-WS RI (https://github.com/eclipse-ee4j/metro-jax-ws). RI's version is Metro/2.4.3 (RELEASE-2.4.3-ad3323c; 2019-01-21T17:46:06+0000) JAXWS-RI/2.3.2 JAXWS-API/2.3.2 JAXB-RI/2.3.2 JAXB-API/2.3.2 git-revision#unknown. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://ws.session.ejb/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://ws.session.ejb/" name="CustomerWebService">
<types>
<xsd:schema>
<xsd:import namespace="http://ws.session.ejb/" schemaLocation="http://localhost:8080/CustomerWebService/CustomerWebService?xsd=1"/>
</xsd:schema>
</types>
<message name="retrieveCustomerByCustomerId">
<part name="parameters" element="tns:retrieveCustomerByCustomerId"/>
</message>
<message name="retrieveCustomerByCustomerIdResponse">
<part name="parameters" element="tns:retrieveCustomerByCustomerIdResponse"/>
</message>
<message name="CustomerNotFoundException">
<part name="fault" element="tns:CustomerNotFoundException"/>
</message>
<message name="updateCustomer">
<part name="parameters" element="tns:updateCustomer"/>
</message>
<message name="updateCustomerResponse">
<part name="parameters" element="tns:updateCustomerResponse"/>
</message>
<message name="CustomerAlreadyExistsException">
<part name="fault" element="tns:CustomerAlreadyExistsException"/>
</message>
<message name="InputDataValidationException">
<part name="fault" element="tns:InputDataValidationException"/>
</message>
<message name="UnknownPersistenceException">
<part name="fault" element="tns:UnknownPersistenceException"/>
</message>
<message name="deleteCustomer">
<part name="parameters" element="tns:deleteCustomer"/>
</message>
<message name="deleteCustomerResponse">
<part name="parameters" element="tns:deleteCustomerResponse"/>
</message>
<message name="customerLogin">
<part name="parameters" element="tns:customerLogin"/>
</message>
<message name="customerLoginResponse">
<part name="parameters" element="tns:customerLoginResponse"/>
</message>
<message name="InvalidLoginException">
<part name="fault" element="tns:InvalidLoginException"/>
</message>
<message name="retrieveCustomerByUsername">
<part name="parameters" element="tns:retrieveCustomerByUsername"/>
</message>
<message name="retrieveCustomerByUsernameResponse">
<part name="parameters" element="tns:retrieveCustomerByUsernameResponse"/>
</message>
<message name="retrieveCustomerAppointments">
<part name="parameters" element="tns:retrieveCustomerAppointments"/>
</message>
<message name="retrieveCustomerAppointmentsResponse">
<part name="parameters" element="tns:retrieveCustomerAppointmentsResponse"/>
</message>
<message name="retrieveAppointmentByAppointmentId">
<part name="parameters" element="tns:retrieveAppointmentByAppointmentId"/>
</message>
<message name="retrieveAppointmentByAppointmentIdResponse">
<part name="parameters" element="tns:retrieveAppointmentByAppointmentIdResponse"/>
</message>
<message name="AppointmentNotFoundException">
<part name="fault" element="tns:AppointmentNotFoundException"/>
</message>
<message name="deleteAppointment">
<part name="parameters" element="tns:deleteAppointment"/>
</message>
<message name="deleteAppointmentResponse">
<part name="parameters" element="tns:deleteAppointmentResponse"/>
</message>
<message name="retrieveServiceProvAppointmentsForServiceProv">
<part name="parameters" element="tns:retrieveServiceProvAppointmentsForServiceProv"/>
</message>
<message name="retrieveServiceProvAppointmentsForServiceProvResponse">
<part name="parameters" element="tns:retrieveServiceProvAppointmentsForServiceProvResponse"/>
</message>
<message name="ServiceProviderNotFoundException">
<part name="fault" element="tns:ServiceProviderNotFoundException"/>
</message>
<message name="retrieveServiceProviderById">
<part name="parameters" element="tns:retrieveServiceProviderById"/>
</message>
<message name="retrieveServiceProviderByIdResponse">
<part name="parameters" element="tns:retrieveServiceProviderByIdResponse"/>
</message>
<message name="bookAppointment">
<part name="parameters" element="tns:bookAppointment"/>
</message>
<message name="bookAppointmentResponse">
<part name="parameters" element="tns:bookAppointmentResponse"/>
</message>
<message name="ParseException">
<part name="fault" element="tns:ParseException"/>
</message>
<message name="ServiceProviderAlreadyExistsException">
<part name="fault" element="tns:ServiceProviderAlreadyExistsException"/>
</message>
<message name="cancelAppointment">
<part name="parameters" element="tns:cancelAppointment"/>
</message>
<message name="cancelAppointmentResponse">
<part name="parameters" element="tns:cancelAppointmentResponse"/>
</message>
<message name="getAppointmentTimeString">
<part name="parameters" element="tns:getAppointmentTimeString"/>
</message>
<message name="getAppointmentTimeStringResponse">
<part name="parameters" element="tns:getAppointmentTimeStringResponse"/>
</message>
<message name="getAppointmentDateString">
<part name="parameters" element="tns:getAppointmentDateString"/>
</message>
<message name="getAppointmentDateStringResponse">
<part name="parameters" element="tns:getAppointmentDateStringResponse"/>
</message>
<message name="canBeCancelled">
<part name="parameters" element="tns:canBeCancelled"/>
</message>
<message name="canBeCancelledResponse">
<part name="parameters" element="tns:canBeCancelledResponse"/>
</message>
<message name="updateServiceProvider">
<part name="parameters" element="tns:updateServiceProvider"/>
</message>
<message name="updateServiceProviderResponse">
<part name="parameters" element="tns:updateServiceProviderResponse"/>
</message>
<message name="retrieveServiceProvidersInCriteria">
<part name="parameters" element="tns:retrieveServiceProvidersInCriteria"/>
</message>
<message name="retrieveServiceProvidersInCriteriaResponse">
<part name="parameters" element="tns:retrieveServiceProvidersInCriteriaResponse"/>
</message>
<message name="CategoryNotFoundException">
<part name="fault" element="tns:CategoryNotFoundException"/>
</message>
<message name="computeAverageRating">
<part name="parameters" element="tns:computeAverageRating"/>
</message>
<message name="computeAverageRatingResponse">
<part name="parameters" element="tns:computeAverageRatingResponse"/>
</message>
<message name="rateServiceProvider">
<part name="parameters" element="tns:rateServiceProvider"/>
</message>
<message name="rateServiceProviderResponse">
<part name="parameters" element="tns:rateServiceProviderResponse"/>
</message>
<message name="retrieveCategoryByCategoryNum">
<part name="parameters" element="tns:retrieveCategoryByCategoryNum"/>
</message>
<message name="retrieveCategoryByCategoryNumResponse">
<part name="parameters" element="tns:retrieveCategoryByCategoryNumResponse"/>
</message>
<message name="retrieveAvailableTimeSlotsString">
<part name="parameters" element="tns:retrieveAvailableTimeSlotsString"/>
</message>
<message name="retrieveAvailableTimeSlotsStringResponse">
<part name="parameters" element="tns:retrieveAvailableTimeSlotsStringResponse"/>
</message>
<message name="retrieveFirstAvailableTimeString">
<part name="parameters" element="tns:retrieveFirstAvailableTimeString"/>
</message>
<message name="retrieveFirstAvailableTimeStringResponse">
<part name="parameters" element="tns:retrieveFirstAvailableTimeStringResponse"/>
</message>
<message name="retrieveOccupiedSlotsString">
<part name="parameters" element="tns:retrieveOccupiedSlotsString"/>
</message>
<message name="retrieveOccupiedSlotsStringResponse">
<part name="parameters" element="tns:retrieveOccupiedSlotsStringResponse"/>
</message>
<message name="canBeRated">
<part name="parameters" element="tns:canBeRated"/>
</message>
<message name="canBeRatedResponse">
<part name="parameters" element="tns:canBeRatedResponse"/>
</message>
<message name="retrieveAllCategories">
<part name="parameters" element="tns:retrieveAllCategories"/>
</message>
<message name="retrieveAllCategoriesResponse">
<part name="parameters" element="tns:retrieveAllCategoriesResponse"/>
</message>
<message name="retrieveBusinessCategories">
<part name="parameters" element="tns:retrieveBusinessCategories"/>
</message>
<message name="retrieveBusinessCategoriesResponse">
<part name="parameters" element="tns:retrieveBusinessCategoriesResponse"/>
</message>
<message name="retrieveServiceProviderAppointments">
<part name="parameters" element="tns:retrieveServiceProviderAppointments"/>
</message>
<message name="retrieveServiceProviderAppointmentsResponse">
<part name="parameters" element="tns:retrieveServiceProviderAppointmentsResponse"/>
</message>
<message name="registerCustomer">
<part name="parameters" element="tns:registerCustomer"/>
</message>
<message name="registerCustomerResponse">
<part name="parameters" element="tns:registerCustomerResponse"/>
</message>
<message name="createNewCustomer">
<part name="parameters" element="tns:createNewCustomer"/>
</message>
<message name="createNewCustomerResponse">
<part name="parameters" element="tns:createNewCustomerResponse"/>
</message>
<portType name="CustomerWebService">
<operation name="retrieveCustomerByCustomerId">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveCustomerByCustomerIdRequest" message="tns:retrieveCustomerByCustomerId"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveCustomerByCustomerIdResponse" message="tns:retrieveCustomerByCustomerIdResponse"/>
<fault message="tns:CustomerNotFoundException" name="CustomerNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveCustomerByCustomerId/Fault/CustomerNotFoundException"/>
</operation>
<operation name="updateCustomer">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/updateCustomerRequest" message="tns:updateCustomer"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/updateCustomerResponse" message="tns:updateCustomerResponse"/>
<fault message="tns:CustomerNotFoundException" name="CustomerNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/updateCustomer/Fault/CustomerNotFoundException"/>
<fault message="tns:CustomerAlreadyExistsException" name="CustomerAlreadyExistsException" wsam:Action="http://ws.session.ejb/CustomerWebService/updateCustomer/Fault/CustomerAlreadyExistsException"/>
<fault message="tns:InputDataValidationException" name="InputDataValidationException" wsam:Action="http://ws.session.ejb/CustomerWebService/updateCustomer/Fault/InputDataValidationException"/>
<fault message="tns:UnknownPersistenceException" name="UnknownPersistenceException" wsam:Action="http://ws.session.ejb/CustomerWebService/updateCustomer/Fault/UnknownPersistenceException"/>
</operation>
<operation name="deleteCustomer">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/deleteCustomerRequest" message="tns:deleteCustomer"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/deleteCustomerResponse" message="tns:deleteCustomerResponse"/>
</operation>
<operation name="customerLogin">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/customerLoginRequest" message="tns:customerLogin"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/customerLoginResponse" message="tns:customerLoginResponse"/>
<fault message="tns:InvalidLoginException" name="InvalidLoginException" wsam:Action="http://ws.session.ejb/CustomerWebService/customerLogin/Fault/InvalidLoginException"/>
</operation>
<operation name="retrieveCustomerByUsername">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveCustomerByUsernameRequest" message="tns:retrieveCustomerByUsername"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveCustomerByUsernameResponse" message="tns:retrieveCustomerByUsernameResponse"/>
<fault message="tns:CustomerNotFoundException" name="CustomerNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveCustomerByUsername/Fault/CustomerNotFoundException"/>
</operation>
<operation name="retrieveCustomerAppointments">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveCustomerAppointmentsRequest" message="tns:retrieveCustomerAppointments"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveCustomerAppointmentsResponse" message="tns:retrieveCustomerAppointmentsResponse"/>
<fault message="tns:CustomerNotFoundException" name="CustomerNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveCustomerAppointments/Fault/CustomerNotFoundException"/>
</operation>
<operation name="retrieveAppointmentByAppointmentId">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveAppointmentByAppointmentIdRequest" message="tns:retrieveAppointmentByAppointmentId"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveAppointmentByAppointmentIdResponse" message="tns:retrieveAppointmentByAppointmentIdResponse"/>
<fault message="tns:AppointmentNotFoundException" name="AppointmentNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveAppointmentByAppointmentId/Fault/AppointmentNotFoundException"/>
</operation>
<operation name="deleteAppointment">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/deleteAppointmentRequest" message="tns:deleteAppointment"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/deleteAppointmentResponse" message="tns:deleteAppointmentResponse"/>
<fault message="tns:AppointmentNotFoundException" name="AppointmentNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/deleteAppointment/Fault/AppointmentNotFoundException"/>
</operation>
<operation name="retrieveServiceProvAppointmentsForServiceProv">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveServiceProvAppointmentsForServiceProvRequest" message="tns:retrieveServiceProvAppointmentsForServiceProv"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveServiceProvAppointmentsForServiceProvResponse" message="tns:retrieveServiceProvAppointmentsForServiceProvResponse"/>
<fault message="tns:ServiceProviderNotFoundException" name="ServiceProviderNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveServiceProvAppointmentsForServiceProv/Fault/ServiceProviderNotFoundException"/>
</operation>
<operation name="retrieveServiceProviderById">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveServiceProviderByIdRequest" message="tns:retrieveServiceProviderById"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveServiceProviderByIdResponse" message="tns:retrieveServiceProviderByIdResponse"/>
<fault message="tns:ServiceProviderNotFoundException" name="ServiceProviderNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveServiceProviderById/Fault/ServiceProviderNotFoundException"/>
</operation>
<operation name="bookAppointment">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/bookAppointmentRequest" message="tns:bookAppointment"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/bookAppointmentResponse" message="tns:bookAppointmentResponse"/>
<fault message="tns:ServiceProviderNotFoundException" name="ServiceProviderNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/bookAppointment/Fault/ServiceProviderNotFoundException"/>
<fault message="tns:CustomerNotFoundException" name="CustomerNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/bookAppointment/Fault/CustomerNotFoundException"/>
<fault message="tns:AppointmentNotFoundException" name="AppointmentNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/bookAppointment/Fault/AppointmentNotFoundException"/>
<fault message="tns:ParseException" name="ParseException" wsam:Action="http://ws.session.ejb/CustomerWebService/bookAppointment/Fault/ParseException"/>
<fault message="tns:InputDataValidationException" name="InputDataValidationException" wsam:Action="http://ws.session.ejb/CustomerWebService/bookAppointment/Fault/InputDataValidationException"/>
<fault message="tns:ServiceProviderAlreadyExistsException" name="ServiceProviderAlreadyExistsException" wsam:Action="http://ws.session.ejb/CustomerWebService/bookAppointment/Fault/ServiceProviderAlreadyExistsException"/>
<fault message="tns:UnknownPersistenceException" name="UnknownPersistenceException" wsam:Action="http://ws.session.ejb/CustomerWebService/bookAppointment/Fault/UnknownPersistenceException"/>
</operation>
<operation name="cancelAppointment">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/cancelAppointmentRequest" message="tns:cancelAppointment"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/cancelAppointmentResponse" message="tns:cancelAppointmentResponse"/>
<fault message="tns:AppointmentNotFoundException" name="AppointmentNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/cancelAppointment/Fault/AppointmentNotFoundException"/>
<fault message="tns:CustomerNotFoundException" name="CustomerNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/cancelAppointment/Fault/CustomerNotFoundException"/>
<fault message="tns:ServiceProviderNotFoundException" name="ServiceProviderNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/cancelAppointment/Fault/ServiceProviderNotFoundException"/>
</operation>
<operation name="getAppointmentTimeString">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/getAppointmentTimeStringRequest" message="tns:getAppointmentTimeString"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/getAppointmentTimeStringResponse" message="tns:getAppointmentTimeStringResponse"/>
<fault message="tns:AppointmentNotFoundException" name="AppointmentNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/getAppointmentTimeString/Fault/AppointmentNotFoundException"/>
</operation>
<operation name="getAppointmentDateString">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/getAppointmentDateStringRequest" message="tns:getAppointmentDateString"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/getAppointmentDateStringResponse" message="tns:getAppointmentDateStringResponse"/>
<fault message="tns:AppointmentNotFoundException" name="AppointmentNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/getAppointmentDateString/Fault/AppointmentNotFoundException"/>
</operation>
<operation name="canBeCancelled">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/canBeCancelledRequest" message="tns:canBeCancelled"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/canBeCancelledResponse" message="tns:canBeCancelledResponse"/>
<fault message="tns:AppointmentNotFoundException" name="AppointmentNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/canBeCancelled/Fault/AppointmentNotFoundException"/>
</operation>
<operation name="updateServiceProvider">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/updateServiceProviderRequest" message="tns:updateServiceProvider"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/updateServiceProviderResponse" message="tns:updateServiceProviderResponse"/>
<fault message="tns:ServiceProviderNotFoundException" name="ServiceProviderNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/updateServiceProvider/Fault/ServiceProviderNotFoundException"/>
<fault message="tns:InputDataValidationException" name="InputDataValidationException" wsam:Action="http://ws.session.ejb/CustomerWebService/updateServiceProvider/Fault/InputDataValidationException"/>
<fault message="tns:ServiceProviderAlreadyExistsException" name="ServiceProviderAlreadyExistsException" wsam:Action="http://ws.session.ejb/CustomerWebService/updateServiceProvider/Fault/ServiceProviderAlreadyExistsException"/>
<fault message="tns:UnknownPersistenceException" name="UnknownPersistenceException" wsam:Action="http://ws.session.ejb/CustomerWebService/updateServiceProvider/Fault/UnknownPersistenceException"/>
</operation>
<operation name="retrieveServiceProvidersInCriteria">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveServiceProvidersInCriteriaRequest" message="tns:retrieveServiceProvidersInCriteria"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveServiceProvidersInCriteriaResponse" message="tns:retrieveServiceProvidersInCriteriaResponse"/>
<fault message="tns:CategoryNotFoundException" name="CategoryNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveServiceProvidersInCriteria/Fault/CategoryNotFoundException"/>
</operation>
<operation name="computeAverageRating">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/computeAverageRatingRequest" message="tns:computeAverageRating"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/computeAverageRatingResponse" message="tns:computeAverageRatingResponse"/>
<fault message="tns:ServiceProviderNotFoundException" name="ServiceProviderNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/computeAverageRating/Fault/ServiceProviderNotFoundException"/>
</operation>
<operation name="rateServiceProvider">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/rateServiceProviderRequest" message="tns:rateServiceProvider"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/rateServiceProviderResponse" message="tns:rateServiceProviderResponse"/>
<fault message="tns:ServiceProviderNotFoundException" name="ServiceProviderNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/rateServiceProvider/Fault/ServiceProviderNotFoundException"/>
</operation>
<operation name="retrieveCategoryByCategoryNum">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveCategoryByCategoryNumRequest" message="tns:retrieveCategoryByCategoryNum"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveCategoryByCategoryNumResponse" message="tns:retrieveCategoryByCategoryNumResponse"/>
<fault message="tns:CategoryNotFoundException" name="CategoryNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveCategoryByCategoryNum/Fault/CategoryNotFoundException"/>
</operation>
<operation name="retrieveAvailableTimeSlotsString">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveAvailableTimeSlotsStringRequest" message="tns:retrieveAvailableTimeSlotsString"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveAvailableTimeSlotsStringResponse" message="tns:retrieveAvailableTimeSlotsStringResponse"/>
<fault message="tns:ServiceProviderNotFoundException" name="ServiceProviderNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveAvailableTimeSlotsString/Fault/ServiceProviderNotFoundException"/>
<fault message="tns:ParseException" name="ParseException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveAvailableTimeSlotsString/Fault/ParseException"/>
</operation>
<operation name="retrieveFirstAvailableTimeString">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveFirstAvailableTimeStringRequest" message="tns:retrieveFirstAvailableTimeString"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveFirstAvailableTimeStringResponse" message="tns:retrieveFirstAvailableTimeStringResponse"/>
<fault message="tns:ServiceProviderNotFoundException" name="ServiceProviderNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveFirstAvailableTimeString/Fault/ServiceProviderNotFoundException"/>
<fault message="tns:ParseException" name="ParseException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveFirstAvailableTimeString/Fault/ParseException"/>
</operation>
<operation name="retrieveOccupiedSlotsString">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveOccupiedSlotsStringRequest" message="tns:retrieveOccupiedSlotsString"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveOccupiedSlotsStringResponse" message="tns:retrieveOccupiedSlotsStringResponse"/>
<fault message="tns:ServiceProviderNotFoundException" name="ServiceProviderNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveOccupiedSlotsString/Fault/ServiceProviderNotFoundException"/>
<fault message="tns:ParseException" name="ParseException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveOccupiedSlotsString/Fault/ParseException"/>
</operation>
<operation name="canBeRated">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/canBeRatedRequest" message="tns:canBeRated"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/canBeRatedResponse" message="tns:canBeRatedResponse"/>
<fault message="tns:CustomerNotFoundException" name="CustomerNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/canBeRated/Fault/CustomerNotFoundException"/>
<fault message="tns:ServiceProviderNotFoundException" name="ServiceProviderNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/canBeRated/Fault/ServiceProviderNotFoundException"/>
</operation>
<operation name="retrieveAllCategories">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveAllCategoriesRequest" message="tns:retrieveAllCategories"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveAllCategoriesResponse" message="tns:retrieveAllCategoriesResponse"/>
</operation>
<operation name="retrieveBusinessCategories">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveBusinessCategoriesRequest" message="tns:retrieveBusinessCategories"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveBusinessCategoriesResponse" message="tns:retrieveBusinessCategoriesResponse"/>
</operation>
<operation name="retrieveServiceProviderAppointments">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveServiceProviderAppointmentsRequest" message="tns:retrieveServiceProviderAppointments"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveServiceProviderAppointmentsResponse" message="tns:retrieveServiceProviderAppointmentsResponse"/>
<fault message="tns:ServiceProviderNotFoundException" name="ServiceProviderNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/retrieveServiceProviderAppointments/Fault/ServiceProviderNotFoundException"/>
</operation>
<operation name="registerCustomer">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/registerCustomerRequest" message="tns:registerCustomer"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/registerCustomerResponse" message="tns:registerCustomerResponse"/>
<fault message="tns:CustomerNotFoundException" name="CustomerNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/registerCustomer/Fault/CustomerNotFoundException"/>
<fault message="tns:CustomerAlreadyExistsException" name="CustomerAlreadyExistsException" wsam:Action="http://ws.session.ejb/CustomerWebService/registerCustomer/Fault/CustomerAlreadyExistsException"/>
<fault message="tns:UnknownPersistenceException" name="UnknownPersistenceException" wsam:Action="http://ws.session.ejb/CustomerWebService/registerCustomer/Fault/UnknownPersistenceException"/>
<fault message="tns:InputDataValidationException" name="InputDataValidationException" wsam:Action="http://ws.session.ejb/CustomerWebService/registerCustomer/Fault/InputDataValidationException"/>
</operation>
<operation name="createNewCustomer">
<input wsam:Action="http://ws.session.ejb/CustomerWebService/createNewCustomerRequest" message="tns:createNewCustomer"/>
<output wsam:Action="http://ws.session.ejb/CustomerWebService/createNewCustomerResponse" message="tns:createNewCustomerResponse"/>
<fault message="tns:CustomerNotFoundException" name="CustomerNotFoundException" wsam:Action="http://ws.session.ejb/CustomerWebService/createNewCustomer/Fault/CustomerNotFoundException"/>
<fault message="tns:CustomerAlreadyExistsException" name="CustomerAlreadyExistsException" wsam:Action="http://ws.session.ejb/CustomerWebService/createNewCustomer/Fault/CustomerAlreadyExistsException"/>
<fault message="tns:UnknownPersistenceException" name="UnknownPersistenceException" wsam:Action="http://ws.session.ejb/CustomerWebService/createNewCustomer/Fault/UnknownPersistenceException"/>
<fault message="tns:InputDataValidationException" name="InputDataValidationException" wsam:Action="http://ws.session.ejb/CustomerWebService/createNewCustomer/Fault/InputDataValidationException"/>
</operation>
</portType>
<binding name="CustomerWebServicePortBinding" type="tns:CustomerWebService">
<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
<operation name="retrieveCustomerByCustomerId">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CustomerNotFoundException">
<soap:fault name="CustomerNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="updateCustomer">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CustomerNotFoundException">
<soap:fault name="CustomerNotFoundException" use="literal"/>
</fault>
<fault name="CustomerAlreadyExistsException">
<soap:fault name="CustomerAlreadyExistsException" use="literal"/>
</fault>
<fault name="InputDataValidationException">
<soap:fault name="InputDataValidationException" use="literal"/>
</fault>
<fault name="UnknownPersistenceException">
<soap:fault name="UnknownPersistenceException" use="literal"/>
</fault>
</operation>
<operation name="deleteCustomer">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="customerLogin">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="InvalidLoginException">
<soap:fault name="InvalidLoginException" use="literal"/>
</fault>
</operation>
<operation name="retrieveCustomerByUsername">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CustomerNotFoundException">
<soap:fault name="CustomerNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="retrieveCustomerAppointments">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CustomerNotFoundException">
<soap:fault name="CustomerNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="retrieveAppointmentByAppointmentId">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AppointmentNotFoundException">
<soap:fault name="AppointmentNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="deleteAppointment">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AppointmentNotFoundException">
<soap:fault name="AppointmentNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="retrieveServiceProvAppointmentsForServiceProv">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="ServiceProviderNotFoundException">
<soap:fault name="ServiceProviderNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="retrieveServiceProviderById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="ServiceProviderNotFoundException">
<soap:fault name="ServiceProviderNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="bookAppointment">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="ServiceProviderNotFoundException">
<soap:fault name="ServiceProviderNotFoundException" use="literal"/>
</fault>
<fault name="CustomerNotFoundException">
<soap:fault name="CustomerNotFoundException" use="literal"/>
</fault>
<fault name="AppointmentNotFoundException">
<soap:fault name="AppointmentNotFoundException" use="literal"/>
</fault>
<fault name="ParseException">
<soap:fault name="ParseException" use="literal"/>
</fault>
<fault name="InputDataValidationException">
<soap:fault name="InputDataValidationException" use="literal"/>
</fault>
<fault name="ServiceProviderAlreadyExistsException">
<soap:fault name="ServiceProviderAlreadyExistsException" use="literal"/>
</fault>
<fault name="UnknownPersistenceException">
<soap:fault name="UnknownPersistenceException" use="literal"/>
</fault>
</operation>
<operation name="cancelAppointment">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AppointmentNotFoundException">
<soap:fault name="AppointmentNotFoundException" use="literal"/>
</fault>
<fault name="CustomerNotFoundException">
<soap:fault name="CustomerNotFoundException" use="literal"/>
</fault>
<fault name="ServiceProviderNotFoundException">
<soap:fault name="ServiceProviderNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="getAppointmentTimeString">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AppointmentNotFoundException">
<soap:fault name="AppointmentNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="getAppointmentDateString">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AppointmentNotFoundException">
<soap:fault name="AppointmentNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="canBeCancelled">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="AppointmentNotFoundException">
<soap:fault name="AppointmentNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="updateServiceProvider">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="ServiceProviderNotFoundException">
<soap:fault name="ServiceProviderNotFoundException" use="literal"/>
</fault>
<fault name="InputDataValidationException">
<soap:fault name="InputDataValidationException" use="literal"/>
</fault>
<fault name="ServiceProviderAlreadyExistsException">
<soap:fault name="ServiceProviderAlreadyExistsException" use="literal"/>
</fault>
<fault name="UnknownPersistenceException">
<soap:fault name="UnknownPersistenceException" use="literal"/>
</fault>
</operation>
<operation name="retrieveServiceProvidersInCriteria">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CategoryNotFoundException">
<soap:fault name="CategoryNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="computeAverageRating">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="ServiceProviderNotFoundException">
<soap:fault name="ServiceProviderNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="rateServiceProvider">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="ServiceProviderNotFoundException">
<soap:fault name="ServiceProviderNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="retrieveCategoryByCategoryNum">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CategoryNotFoundException">
<soap:fault name="CategoryNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="retrieveAvailableTimeSlotsString">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="ServiceProviderNotFoundException">
<soap:fault name="ServiceProviderNotFoundException" use="literal"/>
</fault>
<fault name="ParseException">
<soap:fault name="ParseException" use="literal"/>
</fault>
</operation>
<operation name="retrieveFirstAvailableTimeString">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="ServiceProviderNotFoundException">
<soap:fault name="ServiceProviderNotFoundException" use="literal"/>
</fault>
<fault name="ParseException">
<soap:fault name="ParseException" use="literal"/>
</fault>
</operation>
<operation name="retrieveOccupiedSlotsString">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="ServiceProviderNotFoundException">
<soap:fault name="ServiceProviderNotFoundException" use="literal"/>
</fault>
<fault name="ParseException">
<soap:fault name="ParseException" use="literal"/>
</fault>
</operation>
<operation name="canBeRated">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CustomerNotFoundException">
<soap:fault name="CustomerNotFoundException" use="literal"/>
</fault>
<fault name="ServiceProviderNotFoundException">
<soap:fault name="ServiceProviderNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="retrieveAllCategories">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="retrieveBusinessCategories">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="retrieveServiceProviderAppointments">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="ServiceProviderNotFoundException">
<soap:fault name="ServiceProviderNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="registerCustomer">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CustomerNotFoundException">
<soap:fault name="CustomerNotFoundException" use="literal"/>
</fault>
<fault name="CustomerAlreadyExistsException">
<soap:fault name="CustomerAlreadyExistsException" use="literal"/>
</fault>
<fault name="UnknownPersistenceException">
<soap:fault name="UnknownPersistenceException" use="literal"/>
</fault>
<fault name="InputDataValidationException">
<soap:fault name="InputDataValidationException" use="literal"/>
</fault>
</operation>
<operation name="createNewCustomer">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CustomerNotFoundException">
<soap:fault name="CustomerNotFoundException" use="literal"/>
</fault>
<fault name="CustomerAlreadyExistsException">
<soap:fault name="CustomerAlreadyExistsException" use="literal"/>
</fault>
<fault name="UnknownPersistenceException">
<soap:fault name="UnknownPersistenceException" use="literal"/>
</fault>
<fault name="InputDataValidationException">
<soap:fault name="InputDataValidationException" use="literal"/>
</fault>
</operation>
</binding>
<service name="CustomerWebService">
<port name="CustomerWebServicePort" binding="tns:CustomerWebServicePortBinding">
<soap:address location="http://localhost:8080/CustomerWebService/CustomerWebService"/>
</port>
</service>
</definitions>